#server {
	# listen 80 default;
	# server_name ~^.+$ default;
	# return 301 https://$host$request_uri;

	# ssl                 on;
	# ssl_certificate     /etc/nginx/certificate.pem;
	# ssl_certificate_key /etc/nginx/certificate.key;

	# Optimize SSL by caching session parameters for 10 minutes.
	# This cuts down on the number of expensive SSL handshakes.
	# The handshake is the most CPU-intensive operation,
	# and by default it is re-negotiated on every new/parallel connection.
	# By enabling a cache (of type "shared between all Nginx workers"),
	# we tell the client to re-use the already negotiated state.
	# Further optimization can be achieved by raising keepalive_timeout,
	# but that shouldn't be done unless you serve primarily HTTPS.

	# A 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions

	# ssl_session_cache   shared:SSL:10m;
	# ssl_session_timeout 10m;

	# Protect against the BEAST attack by preferring RC4-SHA when using SSLv3 and TLS protocols.
	# Note that TLSv1.1 and TLSv1.2 are immune to the beast attack
	# but only work with OpenSSL v1.0.1 and higher and has limited

	# ssl_protocols  SSLv2 SSLv3 TLSv1;
	# ssl_ciphers  HIGH:!aNULL:!MD5;
	# ssl_prefer_server_ciphers   on;

	# location / {
	#	root  share/nginx/html;
	#	index index.html index.htm;
	# }
#}
